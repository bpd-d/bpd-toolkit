!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("bpdToolkit",[],e):"object"==typeof exports?exports.bpdToolkit=e():(t.bpdToolkit=t.bpdToolkit||{},t.bpdToolkit.task=t.bpdToolkit.task||{},t.bpdToolkit.task.bpdToolkit=t.bpdToolkit.task.bpdToolkit||{},t.bpdToolkit.task.bpdToolkit.task=e())}(self,(function(){return(()=>{"use strict";var t={d:(e,o)=>{for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{default:()=>l});var o,i,s,r,n,a=function(t,e,o){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,o),o},d=function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};function c(t,e){return Object.is(t,e)}class l{constructor(t,e){if(o.set(this,void 0),i.set(this,void 0),s.set(this,void 0),r.set(this,void 0),n.set(this,void 0),a(this,r,void 0),a(this,n,c),a(this,i,0),a(this,o,[]),!t)throw new Error("Callback is incorrect");a(this,s,e&&e>-1?function(t,e){return function(o){return new Promise(((i,s)=>{setTimeout((()=>{try{i(t(o))}catch(t){s(t)}}),e)}))}}(t,e):function(t){return function(e){return new Promise(((o,i)=>{try{o(t(e))}catch(t){i(t)}}))}}(t))}call(t){var e;let r=d(this,o).find((e=>d(this,n).call(this,t,e.arg)));if(r)return r.promise;let c=(a(this,i,1+(e=+d(this,i))),e);const l={ctx:c,arg:t,promise:new Promise(((e,i)=>{this.debug("New task: "+c),d(this,s).call(this,t).then((t=>{this.debug("Task executed: "+c),e(t)}),(t=>{this.debug("Task rejected: "+c+": "+t.message),i(t)})).catch((t=>{i(t)})).finally((()=>{const t=d(this,o).findIndex((t=>t.ctx===c));t>-1&&(d(this,o).splice(t,1),this.debug("Task finished: "+c))}))}))};return d(this,o).push(l),l.promise}setLogger(t){a(this,r,t)}setComparer(t){a(this,n,t)}debug(t){d(this,r)&&d(this,r).call(this,t,Date.now(),d(this,o).length)}}return o=new WeakMap,i=new WeakMap,s=new WeakMap,r=new WeakMap,n=new WeakMap,e})()}));
//# sourceMappingURL=bpdToolkit.task.min.js.map