{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/lock.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;ACMA,MAAM,OAAO;IAIT,YAAY,OAAuB;;QAC/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC;QACjD,IAAI,CAAC,KAAK,SAAG,OAAO,CAAC,IAAI,mCAAI,GAAG,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,MAAe;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC;YAC/B,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,MAAe;QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;IAC/B,CAAC;IAEO,UAAU,CAAC,EAAU,EAAE,MAAe;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO;SACV;QACD,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,eAAe,MAAM,cAAc,EAAE,EAAE,CAAC;IAC1E,CAAC;CACJ;AAEc,SAAS,OAAO,CAAC,OAAwB;IACpD,OAAO,IAAI,OAAO,CAAC,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,CAAC,CAAC;AACtC,CAAC","file":"bpdToolkit.lock.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"lock\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface IBpdLock {\r\n    lock(caller?: string): boolean;\r\n    unlock(caller?: string): boolean;\r\n    isLocked(): boolean;\r\n}\r\n\r\nexport interface BpdLockOptions {\r\n    throwErrors?: boolean;\r\n    initial?: boolean;\r\n    name?: string;\r\n}\r\n\r\nclass BpdLock implements IBpdLock {\r\n    private _lock: boolean;\r\n    private _throwErrors: boolean;\r\n    private _name: string;\r\n    constructor(options: BpdLockOptions) {\r\n        this._lock = options.initial === true;\r\n        this._throwErrors = options.throwErrors === true;\r\n        this._name = options.name ?? \"-\";\r\n    }\r\n\r\n    lock(caller?: string): boolean {\r\n        if (this.isLocked()) {\r\n            this.throwError(\"lock\", caller)\r\n            return false;\r\n        }\r\n        this._lock = true;\r\n        return true;\r\n    }\r\n\r\n    unlock(caller?: string): boolean {\r\n        if (!this.isLocked()) {\r\n            this.throwError(\"unlock\", caller)\r\n            return false;\r\n        }\r\n        this._lock = false;\r\n        return true;\r\n    }\r\n\r\n    isLocked(): boolean {\r\n        return this._lock === true;\r\n    }\r\n\r\n    private throwError(fn: string, caller?: string) {\r\n        if (!this._throwErrors) {\r\n            return;\r\n        }\r\n        throw new Error(`[${this._name}] Component ${caller} error on: ${fn}`)\r\n    }\r\n}\r\n\r\nexport default function getLock(options?: BpdLockOptions) {\r\n    return new BpdLock(options ?? {});\r\n}"],"sourceRoot":""}