{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/colors.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNA;;GAEG;AAuBH;;GAEG;AAEH;;;;GAIG;AAEI,SAAS,QAAQ,CAAC,GAAW;IAChC,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACvD;IAED,OAAO,WAAW,CAAC;QACf,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;QAChB,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;QAClB,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;KACpB,CAAC;AACN,CAAC;AAED;;;;GAIG;AACI,SAAS,QAAQ,CAAC,QAAkB;IACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;QACxB,OAAO,SAAS,CAAC;KACpB;IACD,IAAI,EAAE,CAAC;IACP,MAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC;IAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;IACjC,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC;IAC9B,IAAI,KAAK,IAAI,GAAG,EAAE;QACd,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;KAC1B;SAAM;QACH,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;KACpC;IACD,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1B,OAAO,WAAW,CAAC;QACf,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAChD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;QAC9C,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;KACpD,CAAC,CAAC;AACP,CAAC;AAGD;;;;GAIG;AACI,SAAS,QAAQ,CAAC,QAAkB;IACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;QACxB,OAAO,SAAS,CAAC;KACpB;IACD,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,MAAM,GAAG,GAAG,IAAI,KAAK,CACjB,QAAQ,CAAC,GAAG,GAAG,GAAG,EAClB,QAAQ,CAAC,KAAK,GAAG,GAAG,EACpB,QAAQ,CAAC,IAAI,GAAG,GAAG,CACtB,CAAC;IAEF,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE;YAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;SAAE;QAChD,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE;YAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YAAC,QAAQ,GAAG,OAAO,CAAC;SAAE;KACvE;IAED,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC5C,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,MAAM,UAAU,GAAG,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAClD,OAAO,WAAW,CAAC;QACf,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG;QAC9C,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;KAC3C,CAAC,CAAC;AACP,CAAC;AAED;;EAEE;AACF,SAAS,WAAW,CAAC,QAAkB;IACnC,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACjG,OAAO,QAAQ,CAAC;KACnB;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AAED,SAAS,WAAW,CAAC,QAAkB;IACnC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QAC7B,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;QAClC,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;QACnC,OAAO,QAAQ,CAAC;KACnB;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AAED,SAAS,OAAO,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW;IACpD,OAAO,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,CAAC;AACxC,CAAC;AAED,SAAS,cAAc,CAAC,KAAa;IACjC,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,MAAM,CAAC,QAAkB,EAAE,GAAW,EAAE,GAAW,EAAE,UAAkB;IAC5E,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;QAClC,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAC5C;IACD,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY,CAAC;IACnE,IAAI,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAEpD,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;QACZ,OAAO,CAAC,CAAC;KACZ;IACD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;IACf,IAAI,GAAG,GAAG,CAAC,EAAE;QACT,OAAO,GAAG,GAAG,GAAG,CAAC;KACpB;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,QAAkB,EAAE,GAAW,EAAE,GAAW;IAC7D,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrD,CAAC;AAED,SAAS,aAAa,CAAC,QAAkB,EAAE,GAAW,EAAE,GAAW;IAC/D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACzD,CAAC;AAED,SAAS,YAAY,CAAC,QAAkB,EAAE,GAAW,EAAE,GAAW;IAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACzD,CAAC;AAED;;;;;GAKG;AACH,SAAS,aAAa,CAAC,GAAW,EAAE,GAAW,EAAE,SAAiB;IAC9D,IAAI,GAAG,IAAI,GAAG,EAAE;QACZ,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,SAAS,GAAG,GAAG,EAAE;QACjB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;KACpC;IACD,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACzC,CAAC;AAED;;;;;;GAMG;AACH,SAAS,QAAQ,CAAC,EAAU,EAAE,EAAU,EAAE,GAAW;IACjD,IAAI,GAAG,GAAG,CAAC;QAAE,GAAG,IAAI,CAAC,CAAC;IACtB,IAAI,GAAG,IAAI,CAAC;QAAE,GAAG,IAAI,CAAC,CAAC;IACvB,IAAI,GAAG,GAAG,CAAC;QAAE,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;SACpC,IAAI,GAAG,GAAG,CAAC;QAAE,OAAO,EAAE,CAAC;SACvB,IAAI,GAAG,GAAG,CAAC;QAAE,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;;QAC/C,OAAO,EAAE,CAAC;AACnB,CAAC;AAED;;;;GAIG;AACI,SAAS,KAAK,CAAC,KAAa;IAC/B,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC7B,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KAAE;IAC3C,OAAO,GAAG,CAAC;AACf,CAAC;AAGD;;;;GAIG;AACI,SAAS,OAAO,CAAC,GAAW;IAC/B,OAAO,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7B,CAAC;AAED;;GAEG;AAEH;;;;GAIG;AACI,SAAS,WAAW,CAAC,QAAkB;IAC1C,OAAO,OAAO,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,UAAU,GAAG,GAAG,KAAK,QAAQ,CAAC,SAAS,GAAG,GAAG,IAAI,CAAC;AAC7F,CAAC;AAED;;;;GAIG;AACI,SAAS,WAAW,CAAC,QAAkB;IAC1C,OAAO,OAAO,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC;AACrE,CAAC;AAED;;;;GAIG;AACI,SAAS,YAAY,CAAC,SAAoB;IAC7C,OAAO,QAAQ,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC;AAC5F,CAAC;AAED;;;;GAIG;AACI,SAAS,WAAW,CAAC,QAAkB;IAC1C,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;AACpF,CAAC;AAED;;;;GAIG;AACI,SAAS,YAAY,CAAC,SAAoB;IAC7C,OAAO,WAAW,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AACjE,CAAC","file":"bpdToolkit.colors.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"colors\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Methods implementation borrowed from W3School color converter implementation\r\n */\r\n\r\n\r\n/**\r\n * Interfaces\r\n */\r\n\r\nexport interface RgbColor {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n}\r\n\r\nexport interface RgbaColor extends RgbColor {\r\n    alpha: number;\r\n}\r\n\r\nexport interface HslColor {\r\n    hue: number;\r\n    saturation: number;\r\n    lightness: number;\r\n}\r\n\r\n/**\r\n * Converters \r\n */\r\n\r\n/**\r\n * Converts hex color string to RGB color object\r\n * @param hex string w/o # character\r\n * @returns RGB color\r\n */\r\n\r\nexport function hexToRgb(hex: string): RgbColor | undefined {\r\n    let start = hex.includes('#') ? 1 : 0;\r\n    const rgbArray = new Array(3);\r\n    for (let i = 0; i < 3; i++) {\r\n        rgbArray[i] = fromHex(hex.substr(start + i * 2, 2));\r\n    }\r\n\r\n    return validateRgb({\r\n        red: rgbArray[0],\r\n        green: rgbArray[1],\r\n        blue: rgbArray[2]\r\n    })\r\n}\r\n\r\n/**\r\n * Converts HSL color scheme to RGB color sheme\r\n * @param hslColor \r\n * @returns RGB color object\r\n */\r\nexport function hslToRgb(hslColor: HslColor): RgbColor | undefined {\r\n    if (!validateHsl(hslColor)) {\r\n        return undefined;\r\n    }\r\n    let t2;\r\n    const sat = hslColor.saturation;\r\n    const light = hslColor.lightness;\r\n    const hue = hslColor.hue / 60;\r\n    if (light <= 0.5) {\r\n        t2 = light * (sat + 1);\r\n    } else {\r\n        t2 = light + sat - (light * sat);\r\n    }\r\n    const t1 = light * 2 - t2;\r\n    return validateRgb({\r\n        red: Math.round(hueToRgb(t1, t2, hue + 2) * 255),\r\n        green: Math.round(hueToRgb(t1, t2, hue) * 255),\r\n        blue: Math.round(hueToRgb(t1, t2, hue - 2) * 255)\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Converts RGB color to HSL color\r\n * @param rgbColor RGB color\r\n * @returns HSL color object\r\n */\r\nexport function rgbToHsl(rgbColor: RgbColor): HslColor | undefined {\r\n    if (!validateRgb(rgbColor)) {\r\n        return undefined;\r\n    }\r\n    let maxcolor = 0;\r\n    const rgb = new Array(\r\n        rgbColor.red / 255,\r\n        rgbColor.green / 255,\r\n        rgbColor.blue / 255\r\n    );\r\n\r\n    let min = rgb[0];\r\n    let max = rgb[0];\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n        let nextIdx = i + 1;\r\n        if (rgb[nextIdx] <= min) { min = rgb[nextIdx]; }\r\n        if (rgb[nextIdx] >= max) { max = rgb[nextIdx]; maxcolor = nextIdx; }\r\n    }\r\n\r\n    const hue = getHue(rgb, min, max, maxcolor);\r\n    const light = (min + max) / 2;\r\n    const saturation = getSaturation(min, max, light);\r\n    return validateHsl({\r\n        hue: Math.round(hue),\r\n        saturation: Math.round(saturation * 100) / 100,\r\n        lightness: Math.round(light * 100) / 100\r\n    });\r\n}\r\n\r\n/** \r\n * Helpers\r\n*/\r\nfunction validateRgb(rgbColor: RgbColor): RgbColor | undefined {\r\n    if (between0and255(rgbColor.red) && between0and255(rgbColor.green) && between0and255(rgbColor.blue)) {\r\n        return rgbColor;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction validateHsl(hslColor: HslColor): HslColor | undefined {\r\n    if (between(hslColor.hue, 0, 360) &&\r\n        between(hslColor.saturation, 0, 1) &&\r\n        between(hslColor.lightness, 0, 1)) {\r\n        return hslColor;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction between(value: number, min: number, max: number): boolean {\r\n    return value >= min && value <= max;\r\n}\r\n\r\nfunction between0and255(value: number): boolean {\r\n    return between(value, 0, 255);\r\n}\r\n\r\nfunction getHue(rgbArray: number[], min: number, max: number, colorIndex: number): number {\r\n    if (colorIndex > 2 || colorIndex < 0) {\r\n        throw new Error(\"Incorrect color index\");\r\n    }\r\n    let callbacks = new Array(getHueOnRed, getHueOnGreen, getHueOnBlue)\r\n    let hue = callbacks[colorIndex](rgbArray, min, max);\r\n\r\n    if (isNaN(hue)) {\r\n        return 0;\r\n    }\r\n    hue = hue * 60;\r\n    if (hue < 0) {\r\n        return hue + 360;\r\n    }\r\n    return hue;\r\n}\r\n\r\nfunction getHueOnRed(rgbArray: number[], min: number, max: number): number {\r\n    return (rgbArray[1] - rgbArray[2]) / (max - min);\r\n}\r\n\r\nfunction getHueOnGreen(rgbArray: number[], min: number, max: number): number {\r\n    return 2 + (rgbArray[2] - rgbArray[0]) / (max - min);\r\n}\r\n\r\nfunction getHueOnBlue(rgbArray: number[], min: number, max: number): number {\r\n    return 4 + (rgbArray[0] - rgbArray[1]) / (max - min);\r\n}\r\n\r\n/**\r\n * Helper for rgbToHsl function which calculates saturation\r\n * @param min minimal color value\r\n * @param max \r\n * @param lightness \r\n */\r\nfunction getSaturation(min: number, max: number, lightness: number) {\r\n    if (min == max) {\r\n        return 0;\r\n    }\r\n    if (lightness < 0.5) {\r\n        return (max - min) / (max + min);\r\n    }\r\n    return (max - min) / (2 - max - min);\r\n}\r\n\r\n/**\r\n * Helper for \"hslToRgb\" to calculate color value\r\n * @param t1 \r\n * @param t2 \r\n * @param hue \r\n * @returns color value 0 - 255\r\n */\r\nfunction hueToRgb(t1: number, t2: number, hue: number): number {\r\n    if (hue < 0) hue += 6;\r\n    if (hue >= 6) hue -= 6;\r\n    if (hue < 1) return (t2 - t1) * hue + t1;\r\n    else if (hue < 3) return t2;\r\n    else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;\r\n    else return t1;\r\n}\r\n\r\n/**\r\n * Converts numeric value to hex string\r\n * @param value numeric value\r\n * @returns hex string\r\n */\r\nexport function toHex(value: number): string {\r\n    let hex = value.toString(16);\r\n    while (hex.length < 2) { hex = \"0\" + hex; }\r\n    return hex;\r\n}\r\n\r\n\r\n/**\r\n * Converts hex string to numeric value;\r\n * @param hex \r\n * @returns \r\n */\r\nexport function fromHex(hex: string): number {\r\n    return parseInt(hex, 16);\r\n}\r\n\r\n/**\r\n * To notation\r\n */\r\n\r\n/**\r\n * Creates HSL string from object hsl(x, y%, z%)\r\n * @param hslColor color object\r\n * @returns HSL string\r\n */\r\nexport function toHslString(hslColor: HslColor) {\r\n    return `hsl(${hslColor.hue},${hslColor.saturation * 100}%,${hslColor.lightness * 100}%)`;\r\n}\r\n\r\n/**\r\n * Creates RGB string from object rgb(x, y, z)\r\n * @param rgbColor color object\r\n * @returns RGB string\r\n */\r\nexport function toRgbString(rgbColor: RgbColor) {\r\n    return `rgb(${rgbColor.red},${rgbColor.green},${rgbColor.blue})`;\r\n}\r\n\r\n/**\r\n * Creates RGBa string from object rgba(x, y, z, a)\r\n * @param rgbaColor color object\r\n * @returns RGBa string\r\n */\r\nexport function toRgbaString(rgbaColor: RgbaColor) {\r\n    return `rgba(${rgbaColor.red},${rgbaColor.green},${rgbaColor.blue},${rgbaColor.alpha})`;\r\n}\r\n\r\n/**\r\n * Creates HEX string from rgb object #XXYYZZ\r\n * @param rgbColor color object\r\n * @returns HEx string\r\n */\r\nexport function toHexString(rgbColor: RgbColor) {\r\n    return `#${toHex(rgbColor.red)}${toHex(rgbColor.green)}${toHex(rgbColor.blue)}`;\r\n}\r\n\r\n/**\r\n * Creates HEXa string from rgb object #XXYYZZAA\r\n * @param rgbaColor color object\r\n * @returns HEXa string\r\n */\r\nexport function toHexaString(rgbaColor: RgbaColor) {\r\n    return toHexString(rgbaColor) + toHex(rgbaColor.alpha * 255);\r\n}\r\n\r\n"],"sourceRoot":""}