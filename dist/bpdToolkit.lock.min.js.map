{"version":3,"sources":["webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name].bpdToolkit.[name]/./src/lock.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","BpdLock","options","this","_lock","initial","_throwErrors","throwErrors","_name","name","caller","isLocked","throwError","fn","Error","getLock"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,KAExBD,EAAiB,WAAIA,EAAiB,YAAK,GAAIA,EAAiB,WAAQ,KAAIA,EAAiB,WAAQ,MAAK,GAAIA,EAAiB,WAAQ,KAAc,WAAIA,EAAiB,WAAQ,KAAc,YAAK,GAAIA,EAAiB,WAAQ,KAAc,WAAQ,KAAIC,KAR9P,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1B,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBd,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,mCCOvD,MAAMC,EAIF,YAAYC,G,MACRC,KAAKC,OAA4B,IAApBF,EAAQG,QACrBF,KAAKG,cAAuC,IAAxBJ,EAAQK,YAC5BJ,KAAKK,MAAoB,QAAf,EAAGN,EAAQO,YAAI,QAAI,IAGjC,KAAKC,GACD,OAAIP,KAAKQ,YACLR,KAAKS,WAAW,OAAQF,IACjB,IAEXP,KAAKC,OAAQ,GACN,GAGX,OAAOM,GACH,OAAKP,KAAKQ,YAIVR,KAAKC,OAAQ,GACN,IAJHD,KAAKS,WAAW,SAAUF,IACnB,GAMf,WACI,OAAsB,IAAfP,KAAKC,MAGR,WAAWS,EAAYH,GAC3B,GAAKP,KAAKG,aAGV,MAAM,IAAIQ,MAAM,IAAIX,KAAKK,oBAAoBE,eAAoBG,MAI1D,SAASE,EAAQb,GAC5B,OAAO,IAAID,EAAQC,UAAW,I","file":"bpdToolkit.lock.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"lock\"] = root[\"bpdToolkit\"][\"lock\"] || {}, root[\"bpdToolkit\"][\"lock\"][\"bpdToolkit\"] = root[\"bpdToolkit\"][\"lock\"][\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"lock\"][\"bpdToolkit\"][\"lock\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface IBpdLock {\r\n    lock(caller?: string): boolean;\r\n    unlock(caller?: string): boolean;\r\n    isLocked(): boolean;\r\n}\r\n\r\nexport interface BpdLockOptions {\r\n    throwErrors?: boolean;\r\n    initial?: boolean;\r\n    name?: string;\r\n}\r\n\r\nclass BpdLock implements IBpdLock {\r\n    private _lock: boolean;\r\n    private _throwErrors: boolean;\r\n    private _name: string;\r\n    constructor(options: BpdLockOptions) {\r\n        this._lock = options.initial === true;\r\n        this._throwErrors = options.throwErrors === true;\r\n        this._name = options.name ?? \"-\";\r\n    }\r\n\r\n    lock(caller?: string): boolean {\r\n        if (this.isLocked()) {\r\n            this.throwError(\"lock\", caller)\r\n            return false;\r\n        }\r\n        this._lock = true;\r\n        return true;\r\n    }\r\n\r\n    unlock(caller?: string): boolean {\r\n        if (!this.isLocked()) {\r\n            this.throwError(\"unlock\", caller)\r\n            return false;\r\n        }\r\n        this._lock = false;\r\n        return true;\r\n    }\r\n\r\n    isLocked(): boolean {\r\n        return this._lock === true;\r\n    }\r\n\r\n    private throwError(fn: string, caller?: string) {\r\n        if (!this._throwErrors) {\r\n            return;\r\n        }\r\n        throw new Error(`[${this._name}] Component ${caller} error on: ${fn}`)\r\n    }\r\n}\r\n\r\nexport default function getLock(options?: BpdLockOptions) {\r\n    return new BpdLock(options ?? {});\r\n}"],"sourceRoot":""}