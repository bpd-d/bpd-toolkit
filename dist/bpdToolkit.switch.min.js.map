{"version":3,"sources":["webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name].bpdToolkit.[name]/./src/switch.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","smartSwitch","argument","options","conditions","ret","default","arg","isFunction","condition","result","undefined","Promise","resolve","multi","functionToCheck","toString"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,KAExBD,EAAiB,WAAIA,EAAiB,YAAK,GAAIA,EAAiB,WAAU,OAAIA,EAAiB,WAAU,QAAK,GAAIA,EAAiB,WAAU,OAAc,WAAIA,EAAiB,WAAU,OAAc,YAAK,GAAIA,EAAiB,WAAU,OAAc,WAAU,OAAIC,KAR1Q,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1B,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBd,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,iVC0BhD,SAAeC,EAAkBC,EAAkCC,G,yCACtE,IAAKA,IAAYA,EAAQC,WACrB,OAGJ,IAAIC,EAAMF,EAAQG,QAClB,MAAMC,EAASC,EAAWN,GAAkBA,IAAcA,EAE1D,IAAK,MAAMO,KAAaN,EAAQC,WAAY,CACxC,MAAMM,EAASD,EAAUF,GACzB,QAAeI,IAAXD,IAIAL,EADAG,EAAWE,GACCA,EAAQH,SAERK,QAAQC,QAAaH,IAIf,IAAlBP,EAAQW,OACR,MAGR,OAAOT,KAGX,SAASG,EAAWO,GAChB,OAAOA,GAAyD,sBAAtC,GAAGC,SAASnB,KAAKkB,G","file":"bpdToolkit.switch.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"switch\"] = root[\"bpdToolkit\"][\"switch\"] || {}, root[\"bpdToolkit\"][\"switch\"][\"bpdToolkit\"] = root[\"bpdToolkit\"][\"switch\"][\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"switch\"][\"bpdToolkit\"][\"switch\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface SmartSwitchConditionResult<V> {\r\n    value: V;\r\n    state: boolean;\r\n}\r\n\r\nexport interface SmartSwitchConditionCallback<T, V> {\r\n    (arg: T): Promise<V>;\r\n}\r\n\r\nexport interface SmartSwitchCondition<T, V> {\r\n    (arg: T): ((arg: T) => V) | Promise<V> | V | undefined;\r\n}\r\n\r\nexport type SmartSwitchArgument<T> = T | (() => T);\r\n\r\ninterface SmartSwitchBaseOptions<V> {\r\n    default?: V | undefined;\r\n    multi?: boolean;\r\n}\r\n\r\nexport interface SmartSwitchOptions<T, V> extends SmartSwitchBaseOptions<V> {\r\n    conditions: SmartSwitchCondition<T, V>[];\r\n}\r\n\r\n\r\n/**\r\n * Provides switch implementation with callbacks provided as array\r\n * @param argument - switch key argument\r\n * @param options - switch options: condition callbacks, multi, default\r\n * @returns \r\n */\r\nexport async function smartSwitch<T, V>(argument: SmartSwitchArgument<T>, options: SmartSwitchOptions<T, V>): Promise<V | undefined> {\r\n    if (!options || !options.conditions) {\r\n        return undefined;\r\n    }\r\n\r\n    let ret = options.default;\r\n    const arg: T = isFunction(argument) ? (<any>argument)() : argument;\r\n\r\n    for (const condition of options.conditions) {\r\n        const result = condition(arg)\r\n        if (result === undefined) {\r\n            continue;\r\n        }\r\n        if (isFunction(result)) {\r\n            ret = (<any>result)(arg);\r\n        } else {\r\n            ret = await Promise.resolve(<any>result);\r\n        }\r\n\r\n\r\n        if (options.multi !== true) {\r\n            break;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction isFunction(functionToCheck: any): boolean {\r\n    return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n}"],"sourceRoot":""}