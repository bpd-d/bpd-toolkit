{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/switch.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACmBA;;;;;GAKG;AACI,SAAe,WAAW,CAAO,QAAgC,EAAE,OAAiC;;QACvG,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACjC,OAAO,SAAS,CAAC;SACpB;QAED,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;QAC1B,MAAM,GAAG,GAAM,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAO,QAAS,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;QAEnE,KAAK,MAAM,SAAS,IAAI,OAAO,CAAC,UAAU,EAAE;YACxC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC;YAC7B,IAAI,MAAM,KAAK,SAAS,EAAE;gBACtB,SAAS;aACZ;YACD,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;gBACpB,GAAG,GAAS,MAAO,CAAC,GAAG,CAAC,CAAC;aAC5B;iBAAM;gBACH,GAAG,GAAG,MAAM,OAAO,CAAC,OAAO,CAAM,MAAM,CAAC,CAAC;aAC5C;YAGD,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;gBACxB,MAAM;aACT;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;CAAA;AAED,SAAS,UAAU,CAAC,eAAoB;IACpC,OAAO,eAAe,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,mBAAmB,CAAC;AACxF,CAAC","file":"bpdToolkit.switch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"switch\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface SmartSwitchConditionResult<V> {\r\n    value: V;\r\n    state: boolean;\r\n}\r\n\r\nexport interface SmartSwitchConditionCallback<T, V> {\r\n    (arg: T): Promise<V>;\r\n}\r\n\r\nexport interface SmartSwitchCondition<T, V> {\r\n    (arg: T): ((arg: T) => V) | Promise<V> | V | undefined;\r\n}\r\n\r\nexport type SmartSwitchArgument<T> = T | (() => T);\r\n\r\ninterface SmartSwitchBaseOptions<V> {\r\n    default?: V | undefined;\r\n    multi?: boolean;\r\n}\r\n\r\nexport interface SmartSwitchOptions<T, V> extends SmartSwitchBaseOptions<V> {\r\n    conditions: SmartSwitchCondition<T, V>[];\r\n}\r\n\r\n\r\n/**\r\n * Provides switch implementation with callbacks provided as array\r\n * @param argument - switch key argument\r\n * @param options - switch options: condition callbacks, multi, default\r\n * @returns \r\n */\r\nexport async function smartSwitch<T, V>(argument: SmartSwitchArgument<T>, options: SmartSwitchOptions<T, V>): Promise<V | undefined> {\r\n    if (!options || !options.conditions) {\r\n        return undefined;\r\n    }\r\n\r\n    let ret = options.default;\r\n    const arg: T = isFunction(argument) ? (<any>argument)() : argument;\r\n\r\n    for (const condition of options.conditions) {\r\n        const result = condition(arg)\r\n        if (result === undefined) {\r\n            continue;\r\n        }\r\n        if (isFunction(result)) {\r\n            ret = (<any>result)(arg);\r\n        } else {\r\n            ret = await Promise.resolve(<any>result);\r\n        }\r\n\r\n\r\n        if (options.multi !== true) {\r\n            break;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction isFunction(functionToCheck: any): boolean {\r\n    return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n}"],"sourceRoot":""}