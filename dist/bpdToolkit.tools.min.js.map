{"version":3,"sources":["webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name].bpdToolkit.[name]/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","BPD_TOOLKIT_VERSION","isUndefined","val","isNull","is","typecheck","isEmpty","length","Array","isArray","are","attributes","c","i","sleep","timeout","Promise","resolve","setTimeout","clone","object","includes","assign","getRangeValue","min","max","isInRange","createElementFromString","htmlString","template","document","createElement","innerHTML","content","firstElementChild","parseJsonString","attribute","out","startsWith","endsWith","JSON","parse","jsonify","counter","idx","Counter","prefix","next","hasProperty","fName","hasFunction","enumerateObject","callback","reduceObject","initialValue","result","Debounce","delay","this","args","cancel","clearTimeout","Throttle","throttle","throttleTime","Error","id","e","console","log","throttleAsync","locked","reject","debounce","debounceTime","delayTime","promisify","insert","collection","index","t","splice","move","from","to","size","amount","el","newLength","newTo","generateGuid","S4","Math","random","toString","substring","options","getRandom","ceil","floor","excluded","round","limit","iteration","newIteration","openFullscreen","element","requestFullscreen","elementAny","webkitRequestFullscreen","msRequestFullscreen","closeFullscreen","exitFullscreen","anyDoc","webkitExitFullscreen","msExitFullscreen","isFullscreen","clientHeight","screen","availHeight","height","clientWidth","availWidth","width","Keeper","copy","shrink","push","entry","pop","len","diff"],"mappings":"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","file":"bpdToolkit.tools.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"tools\"] = root[\"bpdToolkit\"][\"tools\"] || {}, root[\"bpdToolkit\"][\"tools\"][\"bpdToolkit\"] = root[\"bpdToolkit\"][\"tools\"][\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"tools\"][\"bpdToolkit\"][\"tools\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const BPD_TOOLKIT_VERSION = \"1.1.0\";\r\n/**\r\n * Checks if value is undefined\r\n * @param val value\r\n */\r\nexport function isUndefined(val: any): boolean {\r\n\treturn typeof val === \"undefined\";\r\n}\r\n\r\n/**\r\n * Checks if value is null\r\n * @param val value\r\n */\r\nexport function isNull(val: any): boolean {\r\n\treturn val === null;\r\n}\r\n\r\n/**\r\n * Checks if value is defined an is not null\r\n * Additionally with type check it can check value if it is not empty string or collection or object\r\n *\r\n * @param val - value\r\n * @param typecheck - default true - additional check whether value is not empty (string, collection, object)\r\n * @returns whether value passed all conditions\r\n */\r\nexport function is<T>(obj: T, typecheck: boolean = true): boolean {\r\n\tif (!isUndefined(obj) && !isNull(obj)) {\r\n\t\tif (!typecheck) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn !isEmpty(obj);\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Checks if value is empty string, array or object\r\n *\r\n *\r\n * @param val - value\r\n * @returns whether value passed all conditions\r\n */\r\nexport function isEmpty<T>(val: T): boolean {\r\n\tif (typeof val === \"string\") {\r\n\t\treturn val.length === 0;\r\n\t}\r\n\tif (typeof val === \"boolean\") {\r\n\t\treturn val;\r\n\t} else if (Array.isArray(val)) {\r\n\t\treturn val.length === 0;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Verifies whether attributes exist and have some values\r\n * @param attributes attributes list\r\n */\r\nexport function are(...attributes: any[]): boolean {\r\n\tif (!is(attributes)) {\r\n\t\treturn false;\r\n\t}\r\n\tlet c = attributes.length;\r\n\tfor (let i = 0; i < c; i++) {\r\n\t\tif (!is(attributes[i])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Gets promisified sleep function\r\n * @param timeout - timeout value in miliseconds\r\n */\r\nexport function sleep(timeout: number): Promise<boolean> {\r\n\treturn new Promise((resolve) =>\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve(true);\r\n\t\t}, timeout)\r\n\t);\r\n}\r\n\r\n/**\r\n * Clones an object\r\n * @param object object to clone\r\n */\r\nexport function clone(object: any): any {\r\n\tif (!is(object)) {\r\n\t\treturn undefined;\r\n\t}\r\n\tlet type = typeof object;\r\n\tif ([\"number\", \"boolean\", \"string\"].includes(type)) {\r\n\t\treturn object;\r\n\t}\r\n\tif (Array.isArray(object)) {\r\n\t\treturn [...object];\r\n\t}\r\n\treturn Object.assign({}, object);\r\n}\r\n\r\n/**\r\n * Gets value from range.\r\n * If value is in range then it is returned, if not then min or max is returned\r\n * @param value - value\r\n * @param min - range minimum\r\n * @param max - range maximum\r\n */\r\nexport function getRangeValue(value: number, min: number, max: number) {\r\n\tif (value < min) {\r\n\t\treturn min;\r\n\t} else if (value > max) {\r\n\t\treturn max;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\nexport function isInRange(value: number, min: number, max: number): boolean {\r\n\treturn is(value) && value >= min && value <= max;\r\n}\r\n\r\n/**\r\n * Creates proper html element from given string\r\n * @param htmlString - string containing html\r\n */\r\nexport function createElementFromString(htmlString: string): Element | null {\r\n\tif (!is(htmlString)) {\r\n\t\treturn null;\r\n\t}\r\n\tlet template = document.createElement(\"template\");\r\n\ttemplate.innerHTML = htmlString;\r\n\treturn template.content.firstElementChild;\r\n}\r\n\r\n/**\r\n * Creates object from JSON string\r\n * String must start with { and end with }\r\n *\r\n * @param attribute - attribute value\r\n * @returns object if string passes test, null otherwise\r\n */\r\n\r\nexport function parseJsonString(attribute: string): any | null {\r\n\tlet out = null;\r\n\tif (is(attribute) && attribute.startsWith(\"{\") && attribute.endsWith(\"}\")) {\r\n\t\tout = jsonify(attribute);\r\n\t\treturn out;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * Number generator\r\n */\r\nexport function* counter(): Iterator<number> {\r\n\tlet idx = 0;\r\n\twhile (true) {\r\n\t\tlet reset = yield idx++;\r\n\t\tif (reset || idx > 200000) {\r\n\t\t\tidx = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function Counter(prefix?: string): () => string {\r\n\tconst c = counter();\r\n\treturn function () {\r\n\t\tlet next = c.next().value;\r\n\t\treturn prefix ? prefix + next : \"\" + next;\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks whether property exists\r\n * @param obj - object\r\n * @param fName - property name\r\n */\r\nexport function hasProperty(obj: any, fName: string) {\r\n\treturn is(obj) && is(obj[fName]);\r\n}\r\n\r\n/**\r\n * Checks whether property exists on the object and it is a function\r\n * @param obj - object\r\n * @param fName - property name\r\n */\r\nexport function hasFunction(obj: any, fName: string) {\r\n\treturn is(obj[fName]) && typeof obj[fName] === \"function\";\r\n}\r\n\r\n/**\r\n * Enumerate properties on the object an invokes callback for each one of them\r\n * @param object Object to enumarate\r\n * @param callback Callback to be invoked for each property\r\n */\r\nexport function enumerateObject(\r\n\tobject: any,\r\n\tcallback: (property: string, value: any) => void\r\n) {\r\n\tif (!are(object, callback)) {\r\n\t\treturn;\r\n\t}\r\n\tfor (let prop in object) {\r\n\t\tif (object.hasOwnProperty(prop)) {\r\n\t\t\tcallback(prop, object[prop]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates new object from passed one by calling callback for each property. Result from callback is an input for next iteration\r\n * @param object - input object\r\n * @param callback - (currentResult, propertyName, propertyValue, currentIndex) - callback for execution\r\n * @param initialValue - initial value of a result object\r\n */\r\nexport function reduceObject<T>(\r\n\tobject: any,\r\n\tcallback: (current: T, prop: string, value: any, index: number) => T,\r\n\tinitialValue: T\r\n): T {\r\n\tif (!are(object, callback)) {\r\n\t\treturn initialValue;\r\n\t}\r\n\tlet result = initialValue;\r\n\tlet counter = 0;\r\n\tfor (let prop in object) {\r\n\t\tif (object.hasOwnProperty(prop)) {\r\n\t\t\tresult = callback(result, prop, object[prop], counter);\r\n\t\t\tcounter++;\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Creates object from JSON string\r\n * @param attribute - JSON string\r\n */\r\nfunction jsonify(attribute: string): any {\r\n\treturn attribute && attribute.length > 0 ? JSON.parse(attribute) : {};\r\n}\r\n\r\n/**\r\n * Calls function after specific timeout.\r\n * If function is called again, timer resets\r\n */\r\nexport class Debounce {\r\n\t#id: any;\r\n\t#delay: number;\r\n\t#callback: (...args: any[]) => void;\r\n\tconstructor(callback: (...args: any[]) => void, delay: number) {\r\n\t\tthis.#id = null;\r\n\t\tthis.#delay = delay;\r\n\t\tthis.#callback = callback;\r\n\t}\r\n\t/**\r\n\t * Creates timeout ending with callback inokation, cancels current timeout\r\n\t * @param args Function args\r\n\t */\r\n\tcall(...args: any[]) {\r\n\t\tthis.cancel();\r\n\t\tthis.#id = setTimeout(() => {\r\n\t\t\tthis.#callback(...args);\r\n\t\t\tthis.#id = null;\r\n\t\t}, this.#delay);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels current callback invokation\r\n\t */\r\n\tcancel() {\r\n\t\tif (this.#id) {\r\n\t\t\tclearTimeout(this.#id);\r\n\t\t\tthis.#id = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Calls function after specific timeout.\r\n * If function is called again, timer resets\r\n */\r\nexport class Throttle {\r\n\t#id: any;\r\n\t#delay: number;\r\n\t#callback: (...args: any[]) => void;\r\n\tconstructor(callback: (...args: any[]) => void, delay: number) {\r\n\t\tthis.#id = null;\r\n\t\tthis.#delay = delay;\r\n\t\tthis.#callback = callback;\r\n\t}\r\n\t/**\r\n\t * Creates timeout ending with callback inokation, cancels current timeout\r\n\t * @param args Function args\r\n\t */\r\n\tcall(...args: any[]) {\r\n\t\tif (this.#id === null) {\r\n\t\t\tthis.#callback(...args);\r\n\t\t\tthis.#id = setTimeout(() => {\r\n\t\t\t\tthis.#id = null;\r\n\t\t\t}, this.#delay);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels current callback invokation\r\n\t */\r\n\tcancel() {\r\n\t\tif (this.#id !== null) {\r\n\t\t\tclearTimeout(this.#id);\r\n\t\t\tthis.#id = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates new function that invokes orginal one but with time limit\r\n * Orignal callback will not be invoked more often every time specified in second argument\r\n * @param callback - callback to execute\r\n * @param throttleTime - time in ms during which callback cannot be executed\r\n * @returns cancellation funtion\r\n */\r\nexport function throttle(\r\n\tcallback: (...args: any[]) => void,\r\n\tthrottleTime: number\r\n) {\r\n\tif (!are(throttleTime, callback)) {\r\n\t\tthrow new Error(\"[thorttle]: Incorrect throttle arguments\");\r\n\t}\r\n\tlet id: any = null;\r\n\treturn function (...args: any[]) {\r\n\t\tif (id === null) {\r\n\t\t\ttry {\r\n\t\t\t\tcallback(...args);\r\n\t\t\t\tid = setTimeout(() => {\r\n\t\t\t\t\tid = null;\r\n\t\t\t\t}, throttleTime);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tid = null;\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn function () {\r\n\t\t\tif (id !== null) {\r\n\t\t\t\tclearTimeout(id);\r\n\t\t\t\tid = null;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Block next callback executions until current finishes by returning an error if current is in progress\r\n * @param callback - callback to execute\r\n * @returns Promise that executes callback or throws error when is locked\r\n */\r\nexport function throttleAsync<T>(\r\n\tcallback: (...args: any[]) => T\r\n): (...args: any[]) => Promise<T> {\r\n\tif (!is(callback)) {\r\n\t\tthrow new Error(\"[throttleAsync]: Provided callback is incorrect\");\r\n\t}\r\n\tlet locked = false;\r\n\treturn function (...args: any[]) {\r\n\t\tif (!locked) {\r\n\t\t\tlocked = true;\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresolve(callback(...args));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\treject(new Error(\"Execution is currently locked\"));\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Debounce function - delays function execution by specfic time. Called again, break current execution and start new one\r\n * @param callback - callback to execute\r\n * @param debounceTime - time amount in ms that execution shall be delayed by\r\n * @returns cancellation function\r\n */\r\nexport function debounce(\r\n\tcallback: (...args: any[]) => void,\r\n\tdebounceTime: number\r\n) {\r\n\tif (!are(callback, debounceTime)) {\r\n\t\tthrow new Error(\"[debounce]: Input arguments are not correct\");\r\n\t}\r\n\tlet id: any = null;\r\n\treturn function (...args: any[]) {\r\n\t\tif (id != null) {\r\n\t\t\tclearTimeout(id);\r\n\t\t\tid = null;\r\n\t\t}\r\n\t\tid = setTimeout(() => {\r\n\t\t\tcallback(...args);\r\n\t\t\tid = null;\r\n\t\t}, debounceTime);\r\n\t\treturn function () {\r\n\t\t\tif (id !== null) {\r\n\t\t\t\tclearTimeout(id);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Delays callback execution by specific time. Callback cannot be called again until previous execution finishes or was cancelled\r\n * @param callback - callback to execute\r\n * @param delayTime - time in ms that execution shall be delayed by\r\n * @returns Cancel callback\r\n */\r\nexport function delay(callback: (...args: any[]) => void, delayTime: number) {\r\n\tif (!are(callback, delayTime)) {\r\n\t\tthrow new Error(\"[delay]: Input arguments are not correct\");\r\n\t}\r\n\tlet id: any = null;\r\n\treturn function (...args: any[]) {\r\n\t\tif (id === null) {\r\n\t\t\tid = setTimeout(() => {\r\n\t\t\t\tcallback(...args);\r\n\t\t\t\tid = null;\r\n\t\t\t}, delayTime);\r\n\t\t}\r\n\t\treturn function () {\r\n\t\t\tif (id !== null) {\r\n\t\t\t\tclearTimeout(id);\r\n\t\t\t\tid = null;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Creates function that once invoked returns a promise that executes original callback\r\n * @param callback Callback to execute in promise\r\n */\r\nexport function promisify<T>(\r\n\tcallback: (...args: any[]) => T\r\n): (...args: any[]) => Promise<T> {\r\n\tif (!is(callback)) {\r\n\t\tthrow new Error(\"[promisify]: Callback is incorrect\");\r\n\t}\r\n\treturn function (...args: any[]) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tresolve(callback(...args));\r\n\t\t\t} catch (e) {\r\n\t\t\t\treject(e);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n}\r\n\r\n/**\r\n * Inserts new item to the collection at specific index. If index is lower than 0 then item is added at position 0, if index is bigger than collection size then item is added at the end\r\n * @param collection Collection of items\r\n * @param index position which new item should be added to - if undefined or null provided item will be inserted at last position\r\n * @param t new items to add\r\n * @returns Copy of the collection with new item inserted at specific position\r\n */\r\nexport function insert<T>(collection: T[], index: number, ...t: T[]): T[] {\r\n\tif (\r\n\t\t!collection ||\r\n\t\tcollection === null ||\r\n\t\t!t ||\r\n\t\tt === null ||\r\n\t\tt.length === 0\r\n\t) {\r\n\t\treturn collection;\r\n\t}\r\n\tlet length = collection.length;\r\n\t// If not provided then add then treat it like last\r\n\tif (!index || index === 0 || index >= length) {\r\n\t\treturn [...collection, ...t];\r\n\t}\r\n\tif (index <= 0) {\r\n\t\treturn [...t, ...collection];\r\n\t}\r\n\tcollection.splice(index, 0, ...t);\r\n\treturn [...collection];\r\n}\r\n\r\n/**\r\n * Moves element or number of elements starting from index to new index\r\n * @param collection - base collection\r\n * @param from - index from\r\n * @param to - index to\r\n * @param size - ?optional - amount of items to be moved\r\n */\r\nexport function move<T>(\r\n\tcollection: T[],\r\n\tfrom: number,\r\n\tto: number,\r\n\tsize?: number\r\n): T[] {\r\n\tif (!collection || collection === null || from < 0) {\r\n\t\treturn collection;\r\n\t}\r\n\tlet amount = size ?? 1;\r\n\tlet length = collection.length;\r\n\tif (length < 2 || from >= length) {\r\n\t\treturn [...collection];\r\n\t}\r\n\tconst el = collection.splice(from, amount);\r\n\tconst newLength = length - amount;\r\n\tconst newTo = to;\r\n\t//let newIdx = newTo < 0 ? 0 : newTo > length - amount ? length - amount : newTo;\r\n\tif (newTo <= 0) {\r\n\t\treturn [...el, ...collection];\r\n\t}\r\n\tif (newTo >= newLength) {\r\n\t\treturn [...collection, ...el];\r\n\t}\r\n\tcollection.splice(newTo, 0, ...el);\r\n\treturn [...collection];\r\n}\r\n\r\n/**\r\n * Generates unique guid\r\n */\r\nexport function generateGuid(): string {\r\n\tconst S4 = function () {\r\n\t\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n\t};\r\n\treturn (\r\n\t\tS4() +\r\n\t\tS4() +\r\n\t\t\"-\" +\r\n\t\tS4() +\r\n\t\t\"-\" +\r\n\t\tS4() +\r\n\t\t\"-\" +\r\n\t\tS4() +\r\n\t\t\"-\" +\r\n\t\tS4() +\r\n\t\tS4() +\r\n\t\tS4()\r\n\t);\r\n}\r\n\r\nexport interface BpdRandomOptions {\r\n\tmin?: number;\r\n\tmax?: number;\r\n\texcluded?: number[];\r\n\tlimit?: number;\r\n}\r\n\r\n/**\r\n * Generates random number from given min - max range with exclusion of items provided in options.\r\n * Method performs recursive operation when result doesn't pass condition - max step limit can be set in options (default is 10)\r\n * If result cannot be found after max recursion steps then error is thrown\r\n * Default for min is 0, for max is 1\r\n * @param options (BpdRandomOptions) - min, max, excluded (array), limit (recursion)\r\n * @returns random number\r\n * @example random({min: 1, max: 3, excluded: [1.2], limit: 10})\r\n */\r\nexport async function random(options?: BpdRandomOptions): Promise<number> {\r\n\tconst _min: number = Math.ceil(options?.min ?? 0);\r\n\tconst _max: number = Math.floor(options?.max ?? 1);\r\n\tconst _exc: number[] = options?.excluded ?? [];\r\n\tconst _limit: number = Math.round(options?.limit ?? 10);\r\n\treturn getRandom(_min, _max, _exc, 0, _limit);\r\n}\r\n\r\n/**\r\n * Method that generates random number\r\n * @param min range minimum\r\n * @param max range maximum\r\n * @param excluded exlcuded list\r\n * @param iteration iteration number\r\n * @param limit max iteration limit\r\n * @returns random number\r\n */\r\nfunction getRandom(\r\n\tmin: number,\r\n\tmax: number,\r\n\texcluded: number[],\r\n\titeration: number,\r\n\tlimit: number\r\n): number {\r\n\tconst result = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t// Positive ending\r\n\tif (!excluded.includes(result)) {\r\n\t\treturn result;\r\n\t}\r\n\tconst newIteration = iteration++;\r\n\tif (newIteration >= limit) {\r\n\t\tthrow new Error(`Max recursive steps limit has been reached: ${limit}`);\r\n\t}\r\n\treturn getRandom(min, max, excluded, newIteration, limit);\r\n}\r\n\r\n/**\r\n * Opens element in fullscreen if possible\r\n * @param element dom element. For full page use document.documentElement\r\n */\r\nexport async function openFullscreen(element: Element): Promise<boolean> {\r\n\tif (element.requestFullscreen) {\r\n\t\tawait element.requestFullscreen();\r\n\t\treturn true;\r\n\t}\r\n\tlet elementAny = element as any;\r\n\tif (elementAny.webkitRequestFullscreen) {\r\n\t\t/* Safari */\r\n\t\tawait elementAny.webkitRequestFullscreen();\r\n\t\treturn true;\r\n\t} else if (elementAny.msRequestFullscreen) {\r\n\t\t/* IE11 */\r\n\t\tawait elementAny.msRequestFullscreen();\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Closes fullscreen if possible\r\n */\r\nexport async function closeFullscreen(): Promise<boolean> {\r\n\tif (document.exitFullscreen) {\r\n\t\tawait document.exitFullscreen();\r\n\t\treturn true;\r\n\t}\r\n\tlet anyDoc = document as any;\r\n\tif (anyDoc.webkitExitFullscreen) {\r\n\t\t/* Safari */\r\n\t\tawait anyDoc.webkitExitFullscreen();\r\n\t\treturn true;\r\n\t} else if (anyDoc.msExitFullscreen) {\r\n\t\t/* IE11 */\r\n\t\tawait anyDoc.msExitFullscreen();\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function isFullscreen(element: Element): boolean {\r\n\tif (!is(element)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (\r\n\t\telement &&\r\n\t\telement.clientHeight >= (screen.availHeight || screen.height) - 30 &&\r\n\t\telement.clientWidth >= (screen.availWidth || screen.width) - 30\r\n\t);\r\n}\r\n\r\n/**\r\n * Stores number of historical elements, allows for undo and redo objects\r\n */\r\nexport class Keeper<T> {\r\n\t#limit: number;\r\n\t#undos: T[];\r\n\t#redos: T[];\r\n\tconstructor(limit: number) {\r\n\t\tthis.#limit = limit;\r\n\t\tthis.#redos = [];\r\n\t\tthis.#undos = [];\r\n\t}\r\n\t/**\r\n\t * Pushes element to undo list\r\n\t * @param t - element\r\n\t */\r\n\tpush(t: T) {\r\n\t\tlet copy = clone(t);\r\n\t\tthis.shrink();\r\n\t\tthis.#undos.push(copy);\r\n\t\tthis.#redos = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets latest element from undo list or undefined if list is empty\r\n\t * @param t - current item to be pushed to redo list. If empty undoed element will be pushed\r\n\t */\r\n\tundo(t?: T): T | undefined {\r\n\t\tif (this.#undos.length === 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tlet copy = clone(t);\r\n\t\tlet entry = this.#undos.pop();\r\n\t\tthis.#redos.push(copy ?? entry);\r\n\t\treturn entry;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets latest element from redo list or undefined if list is empty\r\n\t */\r\n\tredo(): T | undefined {\r\n\t\tif (this.#redos.length === 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\treturn this.#redos.pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Shrinks down undos array to size of limit - 1\r\n\t * Removes oldest entries (starting from index of 0)\r\n\t */\r\n\tshrink(): void {\r\n\t\tlet len = this.#undos.length;\r\n\t\tif (this.#undos.length >= this.#limit) {\r\n\t\t\tlet diff = len - this.#limit + 1;\r\n\t\t\tthis.#undos.splice(0, diff);\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}