{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/task.ts"],"names":[],"mappings":"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","file":"bpdToolkit.task.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"task\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface Comparer<T> {\r\n    (value1?: T, value2?: T): boolean;\r\n}\r\n\r\nexport interface TaskCallback<T, V> {\r\n    (arg?: T): V | Promise<V>;\r\n}\r\n\r\nexport interface TaskExecutorResultCallback<T, V> {\r\n    (arg?: T): Promise<V>;\r\n}\r\n\r\nexport interface TaskExecutor<T, V> {\r\n    (arg: TaskCallback<T, V>): TaskExecutorResultCallback<T, V>;\r\n}\r\n\r\nexport interface TaskLogCallback {\r\n    (message: string, timestamp: number, taskCount: number): void;\r\n}\r\n\r\ninterface TaskData<T, V> {\r\n    arg: T | undefined;\r\n    promise: Promise<V>;\r\n    ctx?: number;\r\n}\r\n\r\nfunction ObjectComparer<T>(value1: T, value2: T): boolean {\r\n    return Object.is(value1, value2);\r\n}\r\n\r\nfunction CallbackExecutor<T, V>(callback: TaskCallback<T, V>): TaskExecutorResultCallback<T, V> {\r\n    return function (arg?: T) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                resolve(callback(arg))\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction CallbackTimeoutExecutor<T, V>(callback: TaskCallback<T, V>, timeout: number): TaskExecutorResultCallback<T, V> {\r\n    return function (arg?: T) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                try {\r\n                    resolve(callback(arg))\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, timeout)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default class Task<T, V> {\r\n    #tasks: TaskData<T, V>[];\r\n    #counter: number;\r\n    #executor: TaskExecutorResultCallback<T, V>;\r\n    #log: TaskLogCallback | undefined;\r\n    #comparer: Comparer<T>;\r\n\r\n    constructor(callback: TaskCallback<T, V>, timeout?: number) {\r\n        this.#log = undefined;\r\n        this.#comparer = ObjectComparer;\r\n        this.#counter = 0;\r\n        this.#tasks = [];\r\n        if (!callback) {\r\n            throw new Error(\"Callback is incorrect\");\r\n        }\r\n        this.#executor = timeout && timeout > -1 ? CallbackTimeoutExecutor(callback, timeout) : CallbackExecutor(callback);\r\n    }\r\n\r\n    call(t?: T) {\r\n        let found = this.#tasks.find(task => this.#comparer(t, task.arg));\r\n        if (found) {\r\n            return found.promise;\r\n        }\r\n        let count = this.#counter++;\r\n        const task: TaskData<T, V> = {\r\n            ctx: count,\r\n            arg: t,\r\n            promise: new Promise((resolve, reject) => {\r\n                this.debug(\"New task: \" + count)\r\n                this.#executor(t).then(\r\n                    (v: V) => {\r\n                        this.debug(\"Task executed: \" + count);\r\n                        resolve(v);\r\n                    },\r\n                    (e: Error) => {\r\n                        this.debug(\"Task rejected: \" + count + \": \" + e.message)\r\n                        reject(e);\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    }).finally(() => {\r\n                        const index = this.#tasks.findIndex(ta => ta.ctx === count);\r\n                        if (index > -1) {\r\n                            this.#tasks.splice(index, 1);\r\n                            this.debug(\"Task finished: \" + count)\r\n                        }\r\n                    })\r\n            })\r\n        }\r\n        this.#tasks.push(task);\r\n        return task.promise;\r\n    }\r\n\r\n    setLogger(callback: TaskLogCallback) {\r\n        this.#log = callback;\r\n    }\r\n\r\n    setComparer(comparer: Comparer<T>): void {\r\n        this.#comparer = comparer;\r\n    }\r\n\r\n    private debug(message: string) {\r\n        if (this.#log) {\r\n            this.#log(message, Date.now(), this.#tasks.length);\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":""}