{"version":3,"sources":["webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name].bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name].bpdToolkit.[name]/./src/task.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ObjectComparer","value1","value2","is","Task","callback","timeout","this","undefined","Error","arg","Promise","resolve","reject","setTimeout","e","CallbackTimeoutExecutor","CallbackExecutor","t","found","find","task","promise","count","ctx","debug","then","v","message","catch","err","finally","index","findIndex","ta","splice","push","comparer","Date","now","length"],"mappings":"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","file":"bpdToolkit.task.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"task\"] = root[\"bpdToolkit\"][\"task\"] || {}, root[\"bpdToolkit\"][\"task\"][\"bpdToolkit\"] = root[\"bpdToolkit\"][\"task\"][\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"task\"][\"bpdToolkit\"][\"task\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface Comparer<T> {\r\n    (value1?: T, value2?: T): boolean;\r\n}\r\n\r\nexport interface TaskCallback<T, V> {\r\n    (arg?: T): V | Promise<V>;\r\n}\r\n\r\nexport interface TaskExecutorResultCallback<T, V> {\r\n    (arg?: T): Promise<V>;\r\n}\r\n\r\nexport interface TaskExecutor<T, V> {\r\n    (arg: TaskCallback<T, V>): TaskExecutorResultCallback<T, V>;\r\n}\r\n\r\nexport interface TaskLogCallback {\r\n    (message: string, timestamp: number, taskCount: number): void;\r\n}\r\n\r\ninterface TaskData<T, V> {\r\n    arg: T | undefined;\r\n    promise: Promise<V>;\r\n    ctx?: number;\r\n}\r\n\r\nfunction ObjectComparer<T>(value1: T, value2: T): boolean {\r\n    return Object.is(value1, value2);\r\n}\r\n\r\nfunction CallbackExecutor<T, V>(callback: TaskCallback<T, V>): TaskExecutorResultCallback<T, V> {\r\n    return function (arg?: T) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                resolve(callback(arg))\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction CallbackTimeoutExecutor<T, V>(callback: TaskCallback<T, V>, timeout: number): TaskExecutorResultCallback<T, V> {\r\n    return function (arg?: T) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                try {\r\n                    resolve(callback(arg))\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, timeout)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default class Task<T, V> {\r\n    #tasks: TaskData<T, V>[];\r\n    #counter: number;\r\n    #executor: TaskExecutorResultCallback<T, V>;\r\n    #log: TaskLogCallback | undefined;\r\n    #comparer: Comparer<T>;\r\n\r\n    constructor(callback: TaskCallback<T, V>, timeout?: number) {\r\n        this.#log = undefined;\r\n        this.#comparer = ObjectComparer;\r\n        this.#counter = 0;\r\n        this.#tasks = [];\r\n        if (!callback) {\r\n            throw new Error(\"Callback is incorrect\");\r\n        }\r\n        this.#executor = timeout && timeout > -1 ? CallbackTimeoutExecutor(callback, timeout) : CallbackExecutor(callback);\r\n    }\r\n\r\n    call(t?: T) {\r\n        let found = this.#tasks.find(task => this.#comparer(t, task.arg));\r\n        if (found) {\r\n            return found.promise;\r\n        }\r\n        let count = this.#counter++;\r\n        const task: TaskData<T, V> = {\r\n            ctx: count,\r\n            arg: t,\r\n            promise: new Promise((resolve, reject) => {\r\n                this.debug(\"New task: \" + count)\r\n                this.#executor(t).then(\r\n                    (v: V) => {\r\n                        this.debug(\"Task executed: \" + count);\r\n                        resolve(v);\r\n                    },\r\n                    (e: Error) => {\r\n                        this.debug(\"Task rejected: \" + count + \": \" + e.message)\r\n                        reject(e);\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    }).finally(() => {\r\n                        const index = this.#tasks.findIndex(ta => ta.ctx === count);\r\n                        if (index > -1) {\r\n                            this.#tasks.splice(index, 1);\r\n                            this.debug(\"Task finished: \" + count)\r\n                        }\r\n                    })\r\n            })\r\n        }\r\n        this.#tasks.push(task);\r\n        return task.promise;\r\n    }\r\n\r\n    setLogger(callback: TaskLogCallback) {\r\n        this.#log = callback;\r\n    }\r\n\r\n    setComparer(comparer: Comparer<T>): void {\r\n        this.#comparer = comparer;\r\n    }\r\n\r\n    private debug(message: string) {\r\n        if (this.#log) {\r\n            this.#log(message, Date.now(), this.#tasks.length);\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":""}