{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/validator.ts"],"names":[],"mappings":"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","file":"bpdToolkit.validator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"validator\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface ValidationResult {\r\n\tresult: boolean;\r\n\terror?: ValidationError;\r\n}\r\n\r\nexport interface ValidationResults<T> {\r\n\tresult: boolean;\r\n\terrors?: ValidationError;\r\n\tdata?: T;\r\n}\r\n\r\nexport interface ValidationOptions {\r\n\tcheckAll?: boolean;\r\n}\r\n\r\nexport interface ValidationError {\r\n\t[id: string]: string[];\r\n}\r\n\r\nexport interface ValidationErrorStep {\r\n\tmessage: string;\r\n\tname: string;\r\n}\r\n\r\nexport interface ValidatonSchema<T> {\r\n\t[id: string]: ValidationCallback<T>[];\r\n}\r\n\r\nexport interface SchemaField<T> {\r\n\tname: keyof T;\r\n\tcallbacks: ValidationCallback<T>[];\r\n}\r\n\r\n// export interface ValidationCallback<T> {\r\n// \tname: string;\r\n// \tfailMessage: string;\r\n// \tcallback: (obj: any, name: keyof T, parent: T) => boolean;\r\n// }\r\nexport interface ValidationCallbackResult {\r\n\tstatus: boolean;\r\n\tmessage?: string;\r\n}\r\nexport interface ValidationCallback<T> {\r\n\t(\r\n\t\tcurrentValue: any,\r\n\t\tcurrentProp: keyof T,\r\n\t\tparent: T\r\n\t): ValidationCallbackResult;\r\n}\r\n\r\nexport interface SchemaFieldBuilderBase<T> {\r\n\tbuild(): SchemaField<T>;\r\n}\r\n\r\nexport interface SchemaFieldBuilder<T> extends SchemaFieldBuilderBase<T> {\r\n\tset(...callbacks: ValidationCallback<T>[]): SchemaFieldBuilder<T>;\r\n}\r\n\r\nexport interface SchemaBuilderBase<T> {\r\n\tbuild(): ValidatonSchema<T>;\r\n}\r\n\r\nexport interface SchemaBuilder<T> extends SchemaBuilderBase<T> {\r\n\tset(name: keyof T, ...callbacks: ValidationCallback<T>[]): SchemaBuilder<T>;\r\n\tdefine(...fields: SchemaFieldBuilderBase<T>[]): SchemaBuilder<T>;\r\n}\r\n\r\nexport interface SchemaStructure<T> {\r\n\t[id: string]: SchemaFieldStructure<T>;\r\n}\r\n\r\nexport interface SchemaFieldStructure<T> {\r\n\tmin?: number | [number, string];\r\n\tmax?: number | [number, string];\r\n\trange?: number[] | [number, number, string];\r\n\ttype?: string | string[];\r\n\trequired?: boolean | [boolean, string];\r\n\tmatch?: string | RegExp | [string | RegExp, string];\r\n\tequal?: any | any[];\r\n\tcompare?: [string, string];\r\n\tcustom?: ValidationCallback<T>;\r\n}\r\n\r\n// Errors\r\n\r\nclass ValidateFunctionError extends Error {\r\n\tconstructor(fname: string, message: string) {\r\n\t\tsuper(`Error in function: ${fname}: ${message}`);\r\n\t\tthis.name = \"ValidateFunctionError\";\r\n\t}\r\n}\r\n\r\n// Helper functions\r\n\r\nfunction getLength(obj: any): number {\r\n\tif (typeof obj === \"number\") {\r\n\t\treturn obj;\r\n\t}\r\n\tif (obj[\"length\"] && typeof obj[\"length\"] === \"number\") {\r\n\t\treturn obj[\"length\"];\r\n\t}\r\n\treturn parseInt(obj);\r\n}\r\n\r\nfunction isExist(obj: any) {\r\n\treturn typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n\r\nfunction validationResultsHelper<T extends V, V>(init?: T) {\r\n\tconst validationRes: ValidationResults<T> = {\r\n\t\tresult: true,\r\n\t\tdata: init,\r\n\t};\r\n\treturn {\r\n\t\tadd: (prop: string, errors: string[]) => {\r\n\t\t\tif (!validationRes.errors) {\r\n\t\t\t\tvalidationRes.errors = {};\r\n\t\t\t}\r\n\t\t\tvalidationRes.result = false;\r\n\t\t\tvalidationRes.errors[prop] = errors;\r\n\t\t},\r\n\t\tsetProp: (prop: keyof T, value: any) => {\r\n\t\t\tif (!validationRes.data) return;\r\n\t\t\tvalidationRes.data[prop] = value;\r\n\t\t},\r\n\t\tget: (): ValidationResults<T> => {\r\n\t\t\tif (!validationRes.result) {\r\n\t\t\t\tvalidationRes.data = undefined;\r\n\t\t\t}\r\n\t\t\treturn validationRes;\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction parseSchemaStructure<T>(\r\n\tschema: SchemaStructure<T>\r\n): ValidatonSchema<T> {\r\n\tconst result: ValidatonSchema<T> = {};\r\n\tfor (let prop in schema) {\r\n\t\tresult[prop] = parseFieldStructure(schema[prop]);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction parseFieldStructure<T>(\r\n\tfieldDef: SchemaFieldStructure<T>\r\n): ValidationCallback<T>[] {\r\n\tconst callbacks: ValidationCallback<T>[] = [];\r\n\tfor (let field in fieldDef) {\r\n\t\tconst callback = getCallbackForField<T>(\r\n\t\t\t<keyof SchemaFieldStructure<T>>field,\r\n\t\t\tfieldDef[<keyof SchemaFieldStructure<T>>field]\r\n\t\t);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallbacks.push(callback);\r\n\t\t}\r\n\t}\r\n\treturn callbacks;\r\n}\r\n\r\nfunction getCallbackForField<T>(\r\n\tfield: keyof SchemaFieldStructure<T>,\r\n\tvalue: any\r\n): ValidationCallback<T> | undefined {\r\n\tlet argument = value;\r\n\tlet message = undefined;\r\n\tif (Array.isArray(value)) {\r\n\t\t[argument, message] = value;\r\n\t}\r\n\tswitch (field) {\r\n\t\tcase \"min\":\r\n\t\t\treturn min(argument);\r\n\t\tcase \"max\":\r\n\t\t\treturn max(argument);\r\n\t\tcase \"equal\":\r\n\t\t\treturn equal(argument);\r\n\t\tcase \"match\":\r\n\t\t\treturn match(argument);\r\n\t\tcase \"type\":\r\n\t\t\treturn ofType(argument);\r\n\t\tcase \"compare\":\r\n\t\t\treturn compare(argument);\r\n\t\tcase \"range\": {\r\n\t\t\tif (!Array.isArray(value) || value.length < 2) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\tmessage = value.length > 2 ? value[2] : undefined;\r\n\t\t\treturn range(value[0], value[1], message);\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn undefined;\r\n\t}\r\n}\r\n\r\nfunction exists<T>(message?: string): ValidationCallback<T> {\r\n\treturn (obj: any) => {\r\n\t\treturn {\r\n\t\t\tstatus: isExist(obj),\r\n\t\t\tmessage: message ?? \"Does not exist\",\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Validator callbacks\r\n */\r\n\r\n/**\r\n * Check whether value (or length) is larger or equal to comapre\r\n * @param minVal value to comapre with current field\r\n * @param message\r\n * @returns\r\n */\r\nexport function min<T>(\r\n\tminVal: number,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\tif (typeof minVal !== \"number\") {\r\n\t\tthrow new ValidateFunctionError(\"min\", \"Input param is incorrect\");\r\n\t}\r\n\treturn (obj: any) => {\r\n\t\treturn {\r\n\t\t\tstatus: getLength(obj) >= minVal,\r\n\t\t\tmessage: message ?? \"Is lesser than \" + minVal,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Check whether value (or length) is smaller or equal to value\r\n * @param maxVal - value to compare current field with\r\n * @param message\r\n * @returns\r\n */\r\nexport function max<T>(\r\n\tmaxVal: number,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\tif (typeof maxVal !== \"number\") {\r\n\t\tthrow new ValidateFunctionError(\"max\", \"Input param is incorrect\");\r\n\t}\r\n\treturn (obj: any) => {\r\n\t\treturn {\r\n\t\t\tstatus: getLength(obj) <= maxVal,\r\n\t\t\tmessage: message ?? \"Is greater than \" + maxVal,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Compares whether values of two fields are equal\r\n * @param fieldName field to compare with current\r\n * @param message\r\n * @returns\r\n */\r\nexport function compare<T>(\r\n\tfieldName: string,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\tif (typeof fieldName !== \"string\") {\r\n\t\tthrow new ValidateFunctionError(\"compare\", \"Input param is incorrect\");\r\n\t}\r\n\treturn (obj: any, name: keyof T, parent: T) => {\r\n\t\treturn {\r\n\t\t\tstatus: (<any>parent)[fieldName] === obj,\r\n\t\t\tmessage: message ?? \"Is different than \" + fieldName,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks if value is within the range (for strings and array length is compared)\r\n * @param {Number} minVal - minmum range value\r\n * @param {Number} maxVal - max range value\r\n * @param {String} message\r\n * @returns\r\n */\r\nexport function range<T>(\r\n\tminVal: number,\r\n\tmaxVal: number,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\tif (typeof maxVal !== \"number\" || typeof minVal !== \"number\") {\r\n\t\tthrow new ValidateFunctionError(\"range\", \"Incorrect input params\");\r\n\t}\r\n\tif (minVal >= maxVal) {\r\n\t\tthrow new ValidateFunctionError(\"range\", \"Incorrect range provided\");\r\n\t}\r\n\treturn (obj: any) => {\r\n\t\tconst len = getLength(obj);\r\n\t\treturn {\r\n\t\t\tstatus: len >= minVal && len <= maxVal,\r\n\t\t\tmessage: message ?? `Doesn't match range ${minVal} and ${maxVal}`,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Matches field value with compare string or regex\r\n * @param {String | RegExp} compare\r\n * @param {String} message\r\n * @returns\r\n */\r\nexport function match<T>(\r\n\tcompare: string | RegExp,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\treturn (obj: any) => {\r\n\t\tconst resultObject = {\r\n\t\t\tstatus: false,\r\n\t\t\tmessage: message ?? `Doesn't match to ${compare}`,\r\n\t\t};\r\n\r\n\t\tif (!obj) {\r\n\t\t\treturn resultObject;\r\n\t\t}\r\n\r\n\t\tconst matchResult =\r\n\t\t\ttypeof obj === \"string\"\r\n\t\t\t\t? obj.match(compare)\r\n\t\t\t\t: obj.toString().match(compare);\r\n\t\tresultObject.status = matchResult !== null;\r\n\r\n\t\treturn resultObject;\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks if field value equals to compare\r\n * @param {any} compare Value to compore field with\r\n * @param {String} message\r\n * @returns\r\n */\r\nexport function equal<T>(\r\n\tcompare: any,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\treturn (obj: any) => {\r\n\t\treturn {\r\n\t\t\tstatus: Object.is(obj, compare),\r\n\t\t\tmessage: message ?? \"Does not equal to \" + compare,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n/**\r\n * Check if field value is of expected type\r\n * @param {String} typeString - exprected type of the field\r\n * @param {String} message\r\n * @returns\r\n */\r\nexport function ofType<T>(\r\n\ttypeString: string,\r\n\tmessage?: string\r\n): ValidationCallback<T> {\r\n\treturn (obj: any) => {\r\n\t\treturn {\r\n\t\t\tstatus: typeof obj === typeString,\r\n\t\t\tmessage: message ?? \"Type doesn't match to \" + typeString,\r\n\t\t};\r\n\t};\r\n}\r\n\r\n////////////////////////////////\r\n\r\nexport function validateSingleValue<T>(\r\n\tprop: keyof T,\r\n\tvalue: any,\r\n\tparent: T,\r\n\tcallbacks: ValidationCallback<T>[],\r\n\toptions?: ValidationOptions\r\n): string[] {\r\n\tconst errors: string[] = [];\r\n\tconst shallContinue = options?.checkAll;\r\n\tconst validators = [exists(), ...callbacks];\r\n\tconst vLen = validators.length;\r\n\r\n\tfor (let i = 0; i < vLen; i++) {\r\n\t\tconst validatorResult = (<ValidationCallback<T>>validators[i])(\r\n\t\t\tvalue,\r\n\t\t\tprop,\r\n\t\t\tparent\r\n\t\t);\r\n\t\ttry {\r\n\t\t\tif (!validatorResult.status) {\r\n\t\t\t\terrors.push(validatorResult.message ?? \"Unknown error\");\r\n\r\n\t\t\t\tif (!shallContinue) break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\terrors.push(\"[Internal] Validation callback error\");\r\n\t\t\tif (!shallContinue) break;\r\n\t\t}\r\n\t}\r\n\r\n\treturn errors;\r\n}\r\n\r\nexport function validate<T extends V, V>(\r\n\tobject: any,\r\n\tschema: ValidatonSchema<V>,\r\n\toptions?: ValidationOptions\r\n): ValidationResults<T> {\r\n\tconst helper = validationResultsHelper<T, V>();\r\n\tfor (let prop in schema) {\r\n\t\tconst value = object[prop];\r\n\t\tconst singleRes = validateSingleValue(\r\n\t\t\tprop,\r\n\t\t\tvalue,\r\n\t\t\tobject,\r\n\t\t\tschema[prop],\r\n\t\t\toptions\r\n\t\t);\r\n\r\n\t\tif (singleRes.length === 0) {\r\n\t\t\thelper.setProp(prop as any, value);\r\n\t\t} else {\r\n\t\t\thelper.add(prop, singleRes);\r\n\t\t\tif (!options?.checkAll) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn helper.get();\r\n}\r\n\r\nexport function schema<T>(\r\n\tschemaStructure?: SchemaStructure<T>\r\n): SchemaBuilder<T> {\r\n\tconst schema: ValidatonSchema<T> = schemaStructure\r\n\t\t? parseSchemaStructure(schemaStructure)\r\n\t\t: {};\r\n\tconst builder: SchemaBuilder<T> = {\r\n\t\tset: (name: keyof T, ...callbacks: ValidationCallback<T>[]) => {\r\n\t\t\tschema[name as string] = callbacks;\r\n\t\t\treturn builder;\r\n\t\t},\r\n\t\tdefine: (...fields: SchemaFieldBuilderBase<T>[]) => {\r\n\t\t\tfields.forEach((field) => {\r\n\t\t\t\tconst { name, callbacks } = field.build();\r\n\t\t\t\tschema[name as string] = callbacks;\r\n\t\t\t});\r\n\t\t\treturn builder;\r\n\t\t},\r\n\t\tbuild: () => {\r\n\t\t\treturn schema;\r\n\t\t},\r\n\t};\r\n\treturn builder;\r\n}\r\n\r\nexport function field<T>(name: keyof T): SchemaFieldBuilder<T> {\r\n\tconst callbacks: ValidationCallback<T>[] = [];\r\n\tconst builder = {\r\n\t\tset: (...validators: ValidationCallback<T>[]) => {\r\n\t\t\tif (!validators) throw new Error(\"Callback not provided\");\r\n\t\t\tcallbacks.push(...validators);\r\n\t\t\treturn builder;\r\n\t\t},\r\n\r\n\t\tbuild: (): SchemaField<T> => {\r\n\t\t\treturn {\r\n\t\t\t\tname,\r\n\t\t\t\tcallbacks,\r\n\t\t\t};\r\n\t\t},\r\n\t};\r\n\treturn builder;\r\n}\r\n"],"sourceRoot":""}