{"version":3,"sources":["webpack://bpdToolkit.[name]/webpack/universalModuleDefinition","webpack://bpdToolkit.[name]/webpack/bootstrap","webpack://bpdToolkit.[name]/webpack/runtime/define property getters","webpack://bpdToolkit.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://bpdToolkit.[name]/webpack/runtime/make namespace object","webpack://bpdToolkit.[name]/./src/queue.ts"],"names":[],"mappings":"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","file":"bpdToolkit.queue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpdToolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpdToolkit\"] = factory();\n\telse\n\t\troot[\"bpdToolkit\"] = root[\"bpdToolkit\"] || {}, root[\"bpdToolkit\"][\"queue\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export type QueueAdapterType = 'batch' | 'single';\r\n\r\nexport interface IQueueAdapter<T> {\r\n    type?: QueueAdapterType;\r\n    onFlush(items: T[]): Promise<boolean>;\r\n}\r\n\r\nexport interface QueueCompareCallback<T> {\r\n    (item1: T, item2: T): boolean;\r\n}\r\n\r\nexport interface QueueErrorCallback<T> {\r\n    (e: unknown, counter: number, items?: T[]): void;\r\n}\r\n\r\nexport interface QueueOptions {\r\n    cleanQueueOnError?: boolean;\r\n    errorLimit?: number;\r\n}\r\n\r\n/**\r\n * Provides basic implementation of queue. \r\n * It perform tasks as single - one by one or in batches - gets all queued tasks at the time.\r\n * Allows to remove task if it wasn't performed yet\r\n * \r\n * Queue gives only a basic logic - task execution is delegated to an adapter \r\n */\r\nexport class Queue<T> {\r\n    private _items: T[];\r\n    private _lock: boolean;\r\n    private _adapter: IQueueAdapter<T>;\r\n    private _onError?: QueueErrorCallback<T>;\r\n    private _comparer?: QueueCompareCallback<T>;\r\n    private _options: QueueOptions;\r\n    private _errorCount: number;\r\n\r\n    constructor(adapter: IQueueAdapter<T>, options?: QueueOptions) {\r\n        this._lock = false;\r\n        this._items = [];\r\n        this._adapter = adapter;\r\n        this._comparer = undefined;\r\n        this._onError = undefined;\r\n        this._errorCount = 0;\r\n        this._options = {\r\n            cleanQueueOnError: false,\r\n            errorLimit: 10\r\n        }\r\n\r\n        if (options) {\r\n            this._options = {\r\n                ...this._options,\r\n                ...options\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add item to a queue - it invokes flush right away\r\n     * @param item \r\n     */\r\n    add(item: T): void {\r\n        this._items.push(item);\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n        this._lock = true;\r\n        this.flush().then(() => {\r\n            this._lock = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Deletes item from task list \r\n     * @param item \r\n     */\r\n    delete(item: T): T | undefined {\r\n        const index = this._items.findIndex(_item => this.compare(_item, item));\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        return this._items.splice(index, 1)[0];\r\n    }\r\n\r\n    /**\r\n     * Indicates whether queue is locked\r\n     */\r\n    isLocked(): boolean {\r\n        return this._lock;\r\n    }\r\n\r\n    /**\r\n     * Sets custom compare callback for cases where Object.is doesn't work\r\n     * Used for delete\r\n     * @param callback \r\n     */\r\n    setCompareCallback(callback: QueueCompareCallback<T>) {\r\n        this._comparer = callback;\r\n    }\r\n\r\n    /**\r\n     * Sets callback to catch errors occured during flush execution\r\n     * @param callback \r\n     */\r\n    onError(callback: QueueErrorCallback<T>) {\r\n        this._onError = callback;\r\n    }\r\n\r\n    private compare(item1: T, item2: T): boolean {\r\n        if (this._comparer) {\r\n            return this._comparer(item1, item2)\r\n        }\r\n        return Object.is(item1, item2);\r\n    }\r\n\r\n    private async flush(): Promise<boolean> {\r\n        const items = this.getItemsForFlush();\r\n        if (items.length === 0) {\r\n            return true;\r\n        }\r\n        try {\r\n            await this._adapter.onFlush(items);\r\n            this._errorCount = 0;\r\n        } catch (e) {\r\n            this._errorCount += 1;\r\n            this.callError(e, items);\r\n            this.cleanQueueOnError();\r\n        }\r\n\r\n        return this.flush();\r\n    }\r\n\r\n    private cleanQueueOnError() {\r\n        if (this._options.cleanQueueOnError && this._options.errorLimit && this._errorCount >= this._options.errorLimit) {\r\n            this._items = [];\r\n            this._errorCount = 0;\r\n            this.callError(\"Errors limit has been reached: \" + this._options.errorLimit, [])\r\n        }\r\n    }\r\n\r\n    private getItemsForFlush(): T[] {\r\n        if (this._adapter.type === 'batch') {\r\n            let result = [...this._items];\r\n            this._items = []\r\n            return result;\r\n        }\r\n        const item = this._items.shift();\r\n        if (item) {\r\n            return [item];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private callError(error: unknown, items?: T[]) {\r\n        if (this._onError) {\r\n            this._onError(error, this._errorCount, items)\r\n        }\r\n    }\r\n}"],"sourceRoot":""}