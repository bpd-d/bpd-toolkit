!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("bpdToolkit",[],e):"object"==typeof exports?exports.bpdToolkit=e():(t.bpdToolkit=t.bpdToolkit||{},t.bpdToolkit.queue=t.bpdToolkit.queue||{},t.bpdToolkit.queue.bpdToolkit=t.bpdToolkit.queue.bpdToolkit||{},t.bpdToolkit.queue.bpdToolkit.queue=e())}(self,(function(){return(()=>{"use strict";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Queue:()=>r});var o=function(t,e,o,r){return new(o||(o=Promise))((function(i,s){function n(t){try{h(r.next(t))}catch(t){s(t)}}function u(t){try{h(r.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?i(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(n,u)}h((r=r.apply(t,e||[])).next())}))};class r{constructor(t,e){this._lock=!1,this._items=[],this._adapter=t,this._comparer=void 0,this._onError=void 0,this._errorCount=0,this._options={cleanQueueOnError:!1,errorLimit:10},e&&(this._options=Object.assign(Object.assign({},this._options),e))}add(t){this._items.push(t),this._lock||(this._lock=!0,this.flush().then((()=>{this._lock=!1})))}delete(t){const e=this._items.findIndex((e=>this.compare(e,t)));if(!(e<0))return this._items.splice(e,1)[0]}isLocked(){return this._lock}setCompareCallback(t){this._comparer=t}onError(t){this._onError=t}compare(t,e){return this._comparer?this._comparer(t,e):Object.is(t,e)}flush(){return o(this,void 0,void 0,(function*(){const t=this.getItemsForFlush();if(0===t.length)return!0;try{yield this._adapter.onFlush(t),this._errorCount=0}catch(e){this._errorCount+=1,this.callError(e,t),this.cleanQueueOnError()}return this.flush()}))}cleanQueueOnError(){this._options.cleanQueueOnError&&this._options.errorLimit&&this._errorCount>=this._options.errorLimit&&(this._items=[],this._errorCount=0,this.callError("Errors limit has been reached: "+this._options.errorLimit,[]))}getItemsForFlush(){if("batch"===this._adapter.type){let t=[...this._items];return this._items=[],t}const t=this._items.shift();return t?[t]:[]}callError(t,e){this._onError&&this._onError(t,this._errorCount,e)}}return e})()}));
//# sourceMappingURL=bpdToolkit.queue.min.js.map